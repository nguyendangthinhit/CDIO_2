{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "path": "cdio2",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        128,
        960
      ],
      "id": "7fa7778d-f384-44c2-9231-76e426d3fd62",
      "name": "Webhook",
      "webhookId": "1eb7709a-b517-489b-bf9e-518494bcfadb"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        464,
        880
      ],
      "id": "15930a28-075d-4f0e-9fdd-4280eecdb2f3",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json['id khách'] }}",
        "contextWindowLength": 10000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        768,
        1280
      ],
      "id": "a1d041b3-4e9c-47a4-9312-4b95ca4c0f82",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        528,
        1232
      ],
      "id": "ce6ea5f2-3126-4ab6-bcc3-e86969e18425",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "f2PuLsJL7AOzJb0S",
          "name": "anhduongit"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Webhook').item.json.body.entry[0].messaging[0].recipient.id }}/messages?access_token=EAAKiLjdsBY0BPXUSrxr1F7Qs7kc5IGVr2X3NFI2SqOm9ggJ07UKV7aJ2No6Y0QtQOu8YxgIBU8q1aZAEF29HXWsGsdqsS1lMIw5otJKvwOXPDaMaDFuVLs50JqE9qOcrOM8OrvOJI41jjD9NNFHJYXwNgH9dzZAlsuVZAgGddO00Dwf7L9WO8z5ThTZBMlmMtEs84AZDZD",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1424,
        1104
      ],
      "id": "eaa22e2e-18e7-4212-97f8-cdfa1c4aa69a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "nguyendangthinhit",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CDIO_2",
          "mode": "name"
        },
        "filePath": "data.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        960,
        1264
      ],
      "id": "34cbed9a-c8f7-4d56-a3e6-2329d823d5cf",
      "name": "Get a file in GitHub",
      "webhookId": "78574644-8d62-47f8-9543-7ac781789167",
      "credentials": {
        "githubApi": {
          "id": "Xt3FaiK7lm83U5E3",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const fullText = $input.first().json.output;\nconst recipientId = $('Edit Fields').first().json['id khách'];\n\nconst items = [];\nlet orderIndex = 0; // Thêm biến đếm thứ tự riêng\n\nfor (let i = 0; i < fullText.length; i += 1890) {\n  items.push({\n    json: {\n      order: orderIndex, // Sử dụng orderIndex thay vì i\n      recipient: { id: recipientId },\n      messaging_type: \"RESPONSE\",\n      message: { text: fullText.slice(i, i + 1890) }\n    }\n  });\n  orderIndex++; // Tăng thứ tự lên 1\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        1088
      ],
      "id": "c7facff6-bb6e-49d5-8ff4-cae9155014a2",
      "name": "Code",
      "executeOnce": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['nd tin nhắn'] }}",
        "options": {
          "systemMessage": "=SYSTEM:\nBạn đang đóng vai chatbot tư vấn tuyển sinh của Đại học Duy Tân. \nDữ liệu mà bạn được cung cấp đã được load trực tiếp từ GitHub repository thông qua n8n, file có tên là data.json.\nDữ liệu bao gồm nhiều file JSON con gộp lại và mỗi key cấp cao sẽ chứa thông tin quan trọng như: \n- Thông tin học phí, chính sách học bổng, đối tượng ưu tiên\n- Chi tiết ngành/chuyên ngành đào tạo\n- Điểm trúng tuyển theo các phương thức xét tuyển\n- Thông tin về trường, khoa, chương trình đào tạo (trong nước và quốc tế)\n- Xu hướng việc làm và gợi ý ngành học theo năng lực, sở thích\n\nBạn cần hiểu một số từ khóa viết tắt để giải thích đúng mã ngành và chương trình:\nCMU: Carnegie Mellon University\nPSU: Pennsylvania State University\nCSU: California State University\nPNU: Purdue Northwest University\nHP: Chương trình Tài năng\nVJJ: Chương trình Việt Nhật\nTROY: Chương trình Du học tại chỗ lấy bằng Đại học Troy (Mỹ)\n\nHƯỚNG DẪN TRẢ LỜI:\n- Nếu người dùng hỏi về các thông tin liên quan đến trường (lịch sử thành lập, hiệu trưởng, chủ tịch , cán bộ, chỉ tiêu tuyển sinh, cơ cấu tổ chức), hãy phân loại câu hỏi này vào nhóm *\"thong_tin_truong\"*.  \n- Nếu người dùng hỏi về tổng số nhóm ngành hoặc các nhóm ngành đào tạo thì chỉ trả lời có bao nhiêu nhóm ngành, sau đó liệt kê tên các nhóm ngành lớn (ví dụ: Công nghệ thông tin, Khoa học máy tính, Cơ khí, Xây dựng, Y tế...).\n- Chỉ khi nào người dùng yêu cầu liệt kê chi tiết ngành trong một nhóm ngành thì mới đưa ra danh sách cụ thể.\n- Nếu người dùng hỏi dạng yes/no (có hay không) thì trả lời “có” hoặc “không”, sau đó hỏi thêm “Bạn có muốn mình tư vấn chi tiết hơn không?”.\n- Khi cần giải thích thông tin về mã ngành hay chương trình, chỉ sử dụng văn bản thuần (plain text).\n\nQUY ĐỊNH ĐỊNH DẠNG:\n- Tuyệt đối KHÔNG sử dụng định dạng Markdown (bao gồm *, -, +, #, _).\n- Tuyệt đối KHÔNG tạo bullet list hoặc numbering tự động.\n- Nếu cần xuống dòng, chỉ sử dụng ký tự xuống dòng (\\n).\n- Trả lời ngắn gọn, đúng trọng tâm.\n\nUSER PROMPT:\n{{ $json[\"user_input\"] }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        688,
        1056
      ],
      "id": "9cb96e7e-642c-49ba-9c1e-49929a46a997",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d58c9aa0-8132-47f3-bc4a-c10456df8f5c",
              "name": "id khách",
              "value": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "aa190287-c7bd-43cc-93c6-58c70c3eed53",
              "name": "nd tin nhắn",
              "value": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        464,
        1056
      ],
      "id": "c6254454-4ac3-493c-8bb3-92ebc89ec23b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "order"
            }
          ]
        },
        "options": {
          "disableDotNotation": false
        }
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1248,
        1088
      ],
      "id": "1d010ea7-58a4-4cae-a679-85b0b6711561",
      "name": "Sort"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get a file in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        []
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c0032ed9-f314-4d6a-a681-6766510014d9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1f147e46e664aabd5555d8f4faf5eb6a6e39fc4b727673de3534a8e40e081c39"
  },
  "id": "VfhgiqgIXX0yZNZ6",
  "tags": []
}