{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "multipleMethods": true,
        "path": "cdio2",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        464,
        864
      ],
      "id": "7fa7778d-f384-44c2-9231-76e426d3fd62",
      "name": "Webhook",
      "webhookId": "1eb7709a-b517-489b-bf9e-518494bcfadb"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.query['hub.challenge'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        688,
        752
      ],
      "id": "15930a28-075d-4f0e-9fdd-4280eecdb2f3",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json['id khách'] }}",
        "contextWindowLength": 10000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1120,
        1584
      ],
      "id": "a1d041b3-4e9c-47a4-9312-4b95ca4c0f82",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        912,
        1584
      ],
      "id": "ce6ea5f2-3126-4ab6-bcc3-e86969e18425",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "f2PuLsJL7AOzJb0S",
          "name": "anhduongit"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/{{ $('Webhook').item.json.body.entry[0].messaging[0].recipient.id }}/messages?access_token=EAAKiLjdsBY0BPXUSrxr1F7Qs7kc5IGVr2X3NFI2SqOm9ggJ07UKV7aJ2No6Y0QtQOu8YxgIBU8q1aZAEF29HXWsGsdqsS1lMIw5otJKvwOXPDaMaDFuVLs50JqE9qOcrOM8OrvOJI41jjD9NNFHJYXwNgH9dzZAlsuVZAgGddO00Dwf7L9WO8z5ThTZBMlmMtEs84AZDZD",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1648,
        976
      ],
      "id": "eaa22e2e-18e7-4212-97f8-cdfa1c4aa69a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "nguyendangthinhit",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CDIO_2",
          "mode": "name"
        },
        "filePath": "data.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        1296,
        1600
      ],
      "id": "34cbed9a-c8f7-4d56-a3e6-2329d823d5cf",
      "name": "Get a file in GitHub",
      "webhookId": "78574644-8d62-47f8-9543-7ac781789167",
      "credentials": {
        "githubApi": {
          "id": "olt12sAaUXBjRwsx",
          "name": "GitHub account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const fullText = $input.first().json.output;\nconst recipientId = $('Edit Fields').first().json['id khách'];\n\nconst items = [];\nlet orderIndex = 0; // Thêm biến đếm thứ tự riêng\n\nfor (let i = 0; i < fullText.length; i += 1890) {\n  items.push({\n    json: {\n      order: orderIndex, // Sử dụng orderIndex thay vì i\n      recipient: { id: recipientId },\n      messaging_type: \"RESPONSE\",\n      message: { text: fullText.slice(i, i + 1890) }\n    }\n  });\n  orderIndex++; // Tăng thứ tự lên 1\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        976
      ],
      "id": "c7facff6-bb6e-49d5-8ff4-cae9155014a2",
      "name": "Code",
      "executeOnce": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['nd tin nhắn'] }}",
        "options": {
          "systemMessage": "=SYSTEM:\nBạn đang đóng vai chatbot tư vấn tuyển sinh của Đại học Duy Tân. \nDữ liệu mà bạn được cung cấp đã được load trực tiếp từ GitHub repository thông qua n8n, file có tên là data.json.\nDữ liệu bao gồm nhiều file JSON con gộp lại và mỗi key cấp cao sẽ chứa thông tin quan trọng như: \n- Thông tin học phí, chính sách học bổng, đối tượng ưu tiên\n- Chi tiết ngành/chuyên ngành đào tạo\n- Điểm trúng tuyển theo các phương thức xét tuyển\n- Thông tin về trường, khoa, chương trình đào tạo (trong nước và quốc tế)\n- Xu hướng việc làm và gợi ý ngành học theo năng lực, sở thích\n\nBạn cần hiểu một số từ khóa viết tắt để giải thích đúng mã ngành và chương trình:\nCMU: Carnegie Mellon University\nPSU: Pennsylvania State University\nCSU: California State University\nPNU: Purdue Northwest University\nHP: Chương trình Tài năng\nVJJ: Chương trình Việt Nhật\nTROY: Chương trình Du học tại chỗ lấy bằng Đại học Troy (Mỹ)\n\nHƯỚNG DẪN TRẢ LỜI:\n- Nếu người dùng hỏi về các thông tin liên quan đến trường (lịch sử thành lập, hiệu trưởng, chủ tịch , cán bộ, chỉ tiêu tuyển sinh, cơ cấu tổ chức), hãy phân loại câu hỏi này vào nhóm *\"thong_tin_truong\"*.  \n- Nếu người dùng hỏi về tổng số nhóm ngành hoặc các nhóm ngành đào tạo thì chỉ trả lời có bao nhiêu nhóm ngành, sau đó liệt kê tên các nhóm ngành lớn (ví dụ: Công nghệ thông tin, Khoa học máy tính, Cơ khí, Xây dựng, Y tế...).\n- Chỉ khi nào người dùng yêu cầu liệt kê chi tiết ngành trong một nhóm ngành thì mới đưa ra danh sách cụ thể.\n- Nếu người dùng hỏi dạng yes/no (có hay không) thì trả lời “có” hoặc “không”, sau đó hỏi thêm “Bạn có muốn mình tư vấn chi tiết hơn không?”.\n- Khi cần giải thích thông tin về mã ngành hay chương trình, chỉ sử dụng văn bản thuần (plain text).\n\nQUY ĐỊNH ĐỊNH DẠNG:\n- Tuyệt đối KHÔNG sử dụng định dạng Markdown (bao gồm *, -, +, #, _).\n- Tuyệt đối KHÔNG tạo bullet list hoặc numbering tự động.\n- Nếu cần xuống dòng, chỉ sử dụng ký tự xuống dòng (\\n).\n- Trả lời ngắn gọn, đúng trọng tâm.\n\nUSER PROMPT:\n{{ $json[\"user_input\"] }}\n\n\nđoạn trên từ từ check lại đã\n\nSYSTEM:\nBạn đang đóng vai chatbot tư vấn tuyển sinh của Đại học Duy Tân. \nDữ liệu mà bạn được cung cấp đã được load trực tiếp từ GitHub repository thông qua n8n, file có tên là data.json.\nDữ liệu bao gồm nhiều file JSON con gộp lại và mỗi key cấp cao sẽ chứa thông tin quan trọng như: \n- Thông tin học phí, chính sách học bổng, đối tượng ưu tiên\n- Chi tiết ngành/chuyên ngành đào tạo\n- Điểm trúng tuyển theo các phương thức xét tuyển\n- Thông tin về trường, khoa, chương trình đào tạo (trong nước và quốc tế)\n- Xu hướng việc làm và gợi ý ngành học theo năng lực, sở thích\n\nBạn cần hiểu một số từ khóa viết tắt để giải thích đúng mã ngành và chương trình:\nCMU: Carnegie Mellon University\nPSU: Pennsylvania State University\nCSU: California State University\nPNU: Purdue Northwest University\nHP: Chương trình Tài năng\nVJJ: Chương trình Việt Nhật\nTROY: Chương trình Du học tại chỗ lấy bằng Đại học Troy (Mỹ)\n\nHƯỚNG DẪN TRẢ LỜI:\nNếu trong input có trường 'cache_hit': true và 'cached_answer', điều đó có nghĩa là đã có câu trả lời tương tự trước đó. \nHãy đọc 'cached_answer' và:\n- Nếu câu trả lời vẫn phù hợp với câu hỏi hiện tại → trả lại y nguyên\n- Nếu cần tinh chỉnh → điều chỉnh cho phù hợp với context\n- Ưu tiên sử dụng thông tin từ cache trước, chỉ query GitHub data khi thực sự cần thiết\n- Nếu người dùng hỏi về các thông tin liên quan đến trường (lịch sử thành lập, hiệu trưởng, chủ tịch , cán bộ, chỉ tiêu tuyển sinh, cơ cấu tổ chức), hãy phân loại câu hỏi này vào nhóm *\"thong_tin_truong\"*.  \n- Nếu người dùng hỏi về tổng số nhóm ngành hoặc các nhóm ngành đào tạo thì chỉ trả lời có bao nhiêu nhóm ngành, sau đó liệt kê tên các nhóm ngành lớn (ví dụ: Công nghệ thông tin, Khoa học máy tính, Cơ khí, Xây dựng, Y tế...).\n- Chỉ khi nào người dùng yêu cầu liệt kê chi tiết ngành trong một nhóm ngành thì mới đưa ra danh sách cụ thể.\n- Nếu người dùng hỏi dạng yes/no (có hay không) thì trả lời “có” hoặc “không”, sau đó hỏi thêm “Bạn có muốn mình tư vấn chi tiết hơn không?”.\n- Khi cần giải thích thông tin về mã ngành hay chương trình, chỉ sử dụng văn bản thuần (plain text).\n\nQUY ĐỊNH ĐỊNH DẠNG:\n- Tuyệt đối KHÔNG sử dụng định dạng Markdown (bao gồm *, -, +, #, _).\n- Tuyệt đối KHÔNG tạo bullet list hoặc numbering tự động.\n- Nếu cần xuống dòng, chỉ sử dụng ký tự xuống dòng (\\n).\n- Trả lời ngắn gọn, đúng trọng tâm.\n\nUSER PROMPT:\n{{ $json[\"user_input\"] }}\n\n\n\nSYSTEM:\nBạn đang đóng vai chatbot tư vấn tuyển sinh của Đại học Duy Tân. \nDữ liệu mà bạn được cung cấp đã được load trực tiếp từ GitHub repository thông qua n8n, file có tên là data.json.\nDữ liệu bao gồm nhiều file JSON con gộp lại và mỗi key cấp cao sẽ chứa thông tin quan trọng như: \n- Thông tin học phí, chính sách học bổng, đối tượng ưu tiên\n- Chi tiết ngành/chuyên ngành đào tạo\n- Điểm trúng tuyển theo các phương thức xét tuyển\n- Thông tin về trường, khoa, chương trình đào tạo (trong nước và quốc tế)\n- Xu hướng việc làm và gợi ý ngành học theo năng lực, sở thích\n\nBạn cần hiểu một số từ khóa viết tắt để giải thích đúng mã ngành và chương trình:\nCMU: Carnegie Mellon University\nPSU: Pennsylvania State University\nCSU: California State University\nPNU: Purdue Northwest University\nHP: Chương trình Tài năng\nVJJ: Chương trình Việt Nhật\nTROY: Chương trình Du học tại chỗ lấy bằng Đại học Troy (Mỹ)\n\nHƯỚNG DẪN TRẢ LỜI:\nNếu trong input có trường 'cache_hit': true và 'cached_answer', điều đó có nghĩa là đã có câu trả lời tương tự trước đó. \nHãy đọc 'cached_answer' và:\n- Nếu câu trả lời vẫn phù hợp với câu hỏi hiện tại → trả lại y nguyên\n- Nếu cần tinh chỉnh → điều chỉnh cho phù hợp với context\n- Ưu tiên sử dụng thông tin từ cache trước, chỉ query GitHub data khi thực sự cần thiết\n- Nếu người dùng hỏi về các thông tin liên quan đến trường (lịch sử thành lập, hiệu trưởng, chủ tịch , cán bộ, chỉ tiêu tuyển sinh, cơ cấu tổ chức), hãy phân loại câu hỏi này vào nhóm *\"thong_tin_truong\"*.  \n- Nếu người dùng hỏi về tổng số nhóm ngành hoặc các nhóm ngành đào tạo thì chỉ trả lời có bao nhiêu nhóm ngành, sau đó liệt kê tên các nhóm ngành lớn (ví dụ: Công nghệ thông tin, Khoa học máy tính, Cơ khí, Xây dựng, Y tế...).\n- Chỉ khi nào người dùng yêu cầu liệt kê chi tiết ngành trong một nhóm ngành thì mới đưa ra danh sách cụ thể.\n- Nếu người dùng hỏi dạng yes/no (có hay không) thì trả lời “có” hoặc “không”, sau đó hỏi thêm “Bạn có muốn mình tư vấn chi tiết hơn không?”.\n- Khi cần giải thích thông tin về mã ngành hay chương trình, chỉ sử dụng văn bản thuần (plain text).\nSAU KHI ĐÃ CÓ THÔNG TIN TRẢ LỜI:\n- bạn sẽ thấy ở đầu output sẽ có 1 file GitHub khác có tên QA.json và đây sẽ là nơi mà bạn sẽ gửi nội dung của cuộc hội thoại vào đây theo như setting của node \nQUY ĐỊNH ĐỊNH DẠNG:\n- Tuyệt đối KHÔNG sử dụng định dạng Markdown (bao gồm *, -, +, #, _).\n- Tuyệt đối KHÔNG tạo bullet list hoặc numbering tự động.\n- Nếu cần xuống dòng, chỉ sử dụng ký tự xuống dòng (\\n).\n- Trả lời ngắn gọn, đúng trọng tâm.\n\nUSER PROMPT:\n{{ $json[\"user_input\"] }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1072,
        1360
      ],
      "id": "9cb96e7e-642c-49ba-9c1e-49929a46a997",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d58c9aa0-8132-47f3-bc4a-c10456df8f5c",
              "name": "id khách",
              "value": "={{ $json.body.entry[0].messaging[0].sender.id }}",
              "type": "string"
            },
            {
              "id": "aa190287-c7bd-43cc-93c6-58c70c3eed53",
              "name": "nd tin nhắn",
              "value": "={{ $json.body.entry[0].messaging[0].message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        672,
        976
      ],
      "id": "c6254454-4ac3-493c-8bb3-92ebc89ec23b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "order"
            }
          ]
        },
        "options": {
          "disableDotNotation": false
        }
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1520,
        976
      ],
      "id": "1d010ea7-58a4-4cae-a679-85b0b6711561",
      "name": "Sort"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "nguyendangthinhit",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CDIO_2",
          "mode": "name"
        },
        "filePath": "QA.json",
        "fileContent": "={{ JSON.stringify({\n  \"question\": $('Edit Fields').first().json['nd tin nhắn'],\n  \"answer\": $input.item.json.output\n}, null, 2) }}",
        "commitMessage": "commit từ n8n"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1552,
        1568
      ],
      "id": "a683e8c4-9be1-4f86-8af8-aac6d515d1ae",
      "name": "Edit a file",
      "webhookId": "d6dfb095-4f82-403a-92a0-93e7808a7d78",
      "credentials": {
        "githubApi": {
          "id": "olt12sAaUXBjRwsx",
          "name": "GitHub account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json['nd tin nhắn'] }}",
        "options": {
          "systemMessage": "SYSTEM:\nBạn là một trợ lý AI có nhiệm vụ kiểm tra dữ liệu trong file QA.json (được load từ GitHub thông qua n8n). \nFile QA.json chứa danh sách các câu hỏi và câu trả lời mẫu đã được lưu trữ. \nNhiệm vụ của bạn là so sánh câu hỏi mà người dùng vừa nhập với dữ liệu trong QA.json. \n\nQUY ĐỊNH TRẢ LỜI:\n- Nếu nội dung câu hỏi đã tồn tại trong QA.json thì trả lời: \"Nội dung tin nhắn đã tồn tại\".\n- Nếu nội dung câu hỏi chưa có trong QA.json thì trả lời: \"Nội dung chưa có\".\n- Chỉ trả về đúng kết quả theo quy định trên, không thêm thông tin khác.\n\nLƯU Ý:\nVới một số câu hỏi có từ ngữ thay thế chung chung (ví dụ: \"ngành này\", \"ngành đó\", \"ngành kia\"), bạn cần dựa vào ngữ cảnh và đặc biệt là câu trả lời đã lưu trong QA.json để xác định ngành cụ thể. Nếu trong dữ liệu đã có thông tin rõ ràng về ngành (ví dụ: Digital Marketing), thì phải match đúng với ngành đó khi trả lời.\n\nUSER PROMPT:\nCâu hỏi người dùng: {{ $json[\"user_input\"] }}\nDữ liệu QA: {{ $json[\"QA\"] }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        960,
        976
      ],
      "id": "cfef433e-eb12-4558-b893-2ab8128a8432",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json['id khách'] }}",
        "contextWindowLength": 10000
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1040,
        1184
      ],
      "id": "5a68f889-43d9-40bb-90dd-5099ac4c28be",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        832,
        1168
      ],
      "id": "2d7df62c-40e2-4b3e-a846-f26df22e10d1",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "f2PuLsJL7AOzJb0S",
          "name": "anhduongit"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "nguyendangthinhit",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CDIO_2",
          "mode": "name"
        },
        "filePath": "QA.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        1264,
        1152
      ],
      "id": "aa730955-90d4-49c6-903d-dc8aade403d6",
      "name": "Get a file in GitHub1",
      "webhookId": "78574644-8d62-47f8-9543-7ac781789167",
      "credentials": {
        "githubApi": {
          "id": "olt12sAaUXBjRwsx",
          "name": "GitHub account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get a file in GitHub": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        []
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get a file in GitHub1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f988e523-2918-4e29-91b9-981562aee3b6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1f147e46e664aabd5555d8f4faf5eb6a6e39fc4b727673de3534a8e40e081c39"
  },
  "id": "VfhgiqgIXX0yZNZ6",
  "tags": []
}